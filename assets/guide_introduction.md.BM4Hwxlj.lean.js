import{_ as i,c as s,a2 as t,o as e}from"./chunks/framework.BQmytedh.js";const k=JSON.parse('{"title":"介绍","description":"","frontmatter":{},"headers":[],"relativePath":"guide/introduction.md","filePath":"guide/introduction.md","lastUpdated":1732684903000}'),l={name:"guide/introduction.md"};function n(o,a,h,p,d,r){return e(),s("div",null,a[0]||(a[0]=[t(`<h1 id="介绍" tabindex="-1">介绍 <a class="header-anchor" href="#介绍" aria-label="Permalink to &quot;介绍&quot;">​</a></h1><p>欢迎来到 Volta!</p><p>Volta 是一种管理 JavaScript 命令行工具的便捷方式。</p><h2 id="功能" tabindex="-1">功能 <a class="header-anchor" href="#功能" aria-label="Permalink to &quot;功能&quot;">​</a></h2><ul><li>速度</li><li>无缝，每个项目的版本切换</li><li>跨平台支持，包括 Windows 和所有 Unix shell</li><li>支持多个包管理器</li><li>稳定的工具安装-无需每次升级都重新安装!</li><li>可扩展性挂钩用于特定于站点的定制</li></ul><h2 id="为什么选择-volta" tabindex="-1">为什么选择 Volta? <a class="header-anchor" href="#为什么选择-volta" aria-label="Permalink to &quot;为什么选择 Volta?&quot;">​</a></h2><p>Volta’s job is to get out of your way.</p><p>使用 Volta，您可以一次选择 Node 引擎，然后不再担心它。您可以在项目之间切换，而不必手动在节点之间切换。你可以在工具链中安装 npm 二进制包，而不必定期重新安装它们，或者弄清楚它们停止工作的原因。</p><h3 id="快速设置和切换-node-引擎" tabindex="-1">快速设置和切换 Node 引擎 <a class="header-anchor" href="#快速设置和切换-node-引擎" aria-label="Permalink to &quot;快速设置和切换 Node 引擎&quot;">​</a></h3><p>获取并使用特定版本的 Node:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">volta</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> node@14</span></span></code></pre></div><p>您应该立即注意到该工具的响应速度有多快。您的开发时间是宝贵的!JavaScript 开发人员应该拥有时髦的工具。 🙂</p><h3 id="为合作者提供可复制的环境" tabindex="-1">为合作者提供可复制的环境 <a class="header-anchor" href="#为合作者提供可复制的环境" aria-label="Permalink to &quot;为合作者提供可复制的环境&quot;">​</a></h3><p>Volta 允许你用一个命令为一个项目选择节点引擎和包管理器:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">volta</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> node@12</span></span></code></pre></div><p>Volta 将 Node 引擎的准确版本保存在 package.json，这样你就可以把你的选择提交给 git。从那时起，每次在项目目录中运行 Node 时，Volta 都会自动切换到您选择的同一版本 的 Node。类似的。所有的合作者都可以通过在他们的开发机器上安装 Volta 来做同样的事情。</p><h3 id="install-and-forget" tabindex="-1">Install and forget <a class="header-anchor" href="#install-and-forget" aria-label="Permalink to &quot;Install and forget&quot;">​</a></h3><p>Volta 还允许您将最喜欢的二进制包作为命令行工具安装，而不必担心它们会干扰您的开发项目。更好的是，这些工具在安装时被固定到特定的 Node 引擎上，除非您显式地告诉它们，否则它们不会更改。这意味着一旦一个工具工作了，它就会继续工作。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -g</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> surge</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">surge</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -h</span></span></code></pre></div><h2 id="如何工作的" tabindex="-1">如何工作的 <a class="header-anchor" href="#如何工作的" aria-label="Permalink to &quot;如何工作的&quot;">​</a></h2><p>Volta 没有使用任何花哨的操作系统特性或特定于 shell 的钩子。</p><p>它是建立在简单，行之有效的方法垫片。每当您使用 Volta 安装工具时，它都会为您的 PATH 添加一个垫片，该垫片充当到正确版本的工具的智能(快速)路由器，并使用正确的 Node 引擎运行它。</p><p>Volta 很容易安装，没有外部依赖，因为它是在 Rust 中作为一个单一的、快速的本地可执行文件构建的。</p>`,23)]))}const u=i(l,[["render",n]]);export{k as __pageData,u as default};
