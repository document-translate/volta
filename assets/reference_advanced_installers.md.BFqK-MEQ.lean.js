import{_ as e,c as s,a2 as i,o as t}from"./chunks/framework.BQmytedh.js";const u=JSON.parse('{"title":"安装程序","description":"","frontmatter":{},"headers":[],"relativePath":"reference/advanced/installers.md","filePath":"reference/advanced/installers.md","lastUpdated":1732684903000}'),l={name:"reference/advanced/installers.md"};function o(n,a,d,c,r,h){return t(),s("div",null,a[0]||(a[0]=[i('<h1 id="安装程序" tabindex="-1">安装程序 <a class="header-anchor" href="#安装程序" aria-label="Permalink to &quot;安装程序&quot;">​</a></h1><p>有关安装程序如何工作以及如何为托管安装创建自己的自定义安装程序/发行版的详细信息。</p><h2 id="current-installers" tabindex="-1">Current Installers <a class="header-anchor" href="#current-installers" aria-label="Permalink to &quot;Current Installers&quot;">​</a></h2><p>从 Volta 0.7.0 开始，所有的官方安装程序都以相同的方式工作:</p><ol><li>解压 Volta 二进制文件</li><li>使用解压缩的 <code>volta</code> 二进制文件调用 <code>volta setup</code> (有关更多信息，请参见 <a href="/reference/setup.html">volta setup</a>)。</li></ol><h3 id="windows-安装程序" tabindex="-1">Windows 安装程序 <a class="header-anchor" href="#windows-安装程序" aria-label="Permalink to &quot;Windows 安装程序&quot;">​</a></h3><p>Windows安装程序将把所有的二进制文件解压到 <code>Program Files\\Volta</code> 目录，并将该文件夹添加到系统的 <code>Path</code> 环境变量中。 它还将在该目录中为以下工具创建垫片（shims）：</p><ul><li><code>node</code></li><li><code>npm</code></li><li><code>npx</code></li><li><code>yarn</code></li></ul><h3 id="unix-安装程序" tabindex="-1">Unix 安装程序 <a class="header-anchor" href="#unix-安装程序" aria-label="Permalink to &quot;Unix 安装程序&quot;">​</a></h3><p>Unix安装程序将所有二进制文件解压到 <code>~/.volta/bin</code> 目录中，因此它们仅针对特定用户进行安装。</p><h2 id="skipping-volta-setup" tabindex="-1">跳过 Volta 设置 <a class="header-anchor" href="#skipping-volta-setup" aria-label="Permalink to &quot;跳过 Volta 设置{#skipping-volta-setup}&quot;">​</a></h2><p>如果你想运行安装程序，但不希望你的配置文件脚本被 <code>volta setup</code> 修改，你可以将 <code>--skip-setup</code> 选项传递给安装程序:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://get.volta.sh</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> bash</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --skip-setup</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">警告</p><p>我们目前不支持在 Windows 上跳过 volta 设置。</p></div><h2 id="installing-old-versions" tabindex="-1">安装旧版本 <a class="header-anchor" href="#installing-old-versions" aria-label="Permalink to &quot;安装旧版本{#installing-old-versions}&quot;">​</a></h2><p>由 <a href="https://get.volta.sh" target="_blank" rel="noreferrer">get.volta.sh</a>提供的默认安装脚本仅支持安装 Volta 1.1.0 及以上版本。 如果您想安装旧版本，可以使用以下 Unix 脚本进行安装，并将 <code>1.0.8</code> 替换为您想要安装的版本。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://raw.githubusercontent.com/volta-cli/volta/8f2074f423c65405dfba9858d9bcf393c38ffb45/dev/unix/volta-install.sh</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> bash</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --version</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1.0.8</span></span></code></pre></div><p>对于 Windows，您可以下载并安装你想要安装的特定版本的 <code>.msi</code> 文件。</p><div class="warning custom-block"><p class="custom-block-title">警告</p><p>Volta 不支持降级，因此为了降级，您需要完全卸载 Volta，然后安装较低版本。</p></div><h2 id="custom-installers" tabindex="-1">自定义安装 <a class="header-anchor" href="#custom-installers" aria-label="Permalink to &quot;自定义安装{#custom-installers}&quot;">​</a></h2><p>创建自定义安装程序/分发方法，需要两个必要步骤和一个可选步骤：</p><h3 id="分发二进制文件" tabindex="-1">分发二进制文件 <a class="header-anchor" href="#分发二进制文件" aria-label="Permalink to &quot;分发二进制文件&quot;">​</a></h3><p>这些二进制文件需要传送到目标机器上。 所需的二进制文件列表将在发布文件中的 <code>volta.manifest</code> 中列出。 截至 Volta 0.7.0 版本，所需的文件如下：</p><ul><li><code>volta[.exe]</code></li><li><code>volta-shim[.exe]</code></li><li><code>volta-migrate[.exe]</code></li></ul><p>这些二进制文件都需要在同一个目录中分发，并且该目录应该在 <code>PATH</code> 上，以便对 <code>volta</code> 命令的调用能够正常工作。</p><h3 id="shim-directory" tabindex="-1">Shim Directory <a class="header-anchor" href="#shim-directory" aria-label="Permalink to &quot;Shim Directory&quot;">​</a></h3><p>还需要将 Volta shim 目录添加到 <code>PATH</code> 中，以便 shims 能够正常工作。 该 shim 目录位于 <code>$VOLTA_HOME/bin</code>（在Windows上为 <code>%VOLTA_HOME%\\bin</code>），其中的 <code>VOLTA_HOME</code> 默认设置为：&quot;</p><ul><li>在 Unix 为 <code>~/.volta</code></li><li>在 Windows 为 <code>%LOCALAPPDATA%\\Volta</code></li></ul><p>如果需要的话，可以手动管理更新路径，或者可以像官方安装程序一样调用 <code>volta setup</code>（如上所述）。</p><h3 id="custom-volta-home" tabindex="-1">自定义 Volta Home（可选） <a class="header-anchor" href="#custom-volta-home" aria-label="Permalink to &quot;自定义 Volta Home（可选）{#custom-volta-home}&quot;">​</a></h3><p>如果您希望在 Volta 数据的默认 <code>VOLTA_HOME</code> 目录之外使用其他目录，您需要将环境变量 <code>VOLTA_HOME</code> 设置为该目录。 如果已经设置了该变量，则对于自定义数据目录， <code>volta setup</code> 仍然可以正常工作。</p>',31)]))}const k=e(l,[["render",o]]);export{u as __pageData,k as default};
